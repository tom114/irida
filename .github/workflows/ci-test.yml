name: Integration Tests

on: pull-request

jobs:
  maven-build: # Maven integration tests
    runs-on: ubuntu-20.04
    env:
      MYSQL_PORT: 3800
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: irida_integration_test
      MYSQL_HOST: 127.0.0.1

    strategy:
      fail-fast: false  #Setting so that if one of the test suites fail, the other will continue
      matrix:
        #The list of test suites to run
        suite: [ 'service_testing', 'rest_testing', 'ui_testing', 'galaxy_testing', 'galaxy_pipeline_testing' ]

    steps:
      - uses: actions/checkout@v2 #Checkout the project from git
      - name: Cache Maven dependencies #Pull the cache for Maven.  This caches all dependencies assuming the pom file is the same
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Cache Node modules #Pull the cache for node_modules.  This caches all dependencies assuming the yarn.lock file stays the same
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: ${{ env.MYSQL_PORT }}
          character set server: 'utf8'
          collation server: 'utf8_general_ci'
          mysql version: '5.7'
          mysql database: ${{ env.MYSQL_DATABASE }}
          mysql user: ${{ env.MYSQL_USER }}
          mysql password: ${{ env.MYSQL_PASSWORD }}
      - name: Set up JDK 11 # Installs java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install libraries # Install our non-maven backed dependencies
        run: pushd lib; ./install-libs.sh; popd
      - name: Verify MySQL connection
        run: |
          while ! mysqladmin ping -h${{ env.MYSQL_HOST }} -P${{ env.MYSQL_PORT }} --silent; do
            sleep 1
          done
      - name: Run tests with Maven # Run the test suite
        run: ./run-tests.sh --db-host ${{ env.MYSQL_HOST }}  --db-port ${{ env.MYSQL_PORT }} --database ${{ env.MYSQL_DATABASE}} ${{ matrix.suite }}

  docs-build: # Testing the javadoc and jekyll documentation builds
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2 #Checkout the project from git
      - name: Cache Maven dependencies #Pull the cache for Maven.  This caches all dependencies assuming the pom file is the same
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK 11 # Installs java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install libraries # Install our non-maven backed dependencies, and docs requirements
        run: pushd lib; ./install-libs.sh; popd; sudo gem install jekyll; sudo gem install pygments.rb
      - name: Run tests with Maven # Run the test suite
        run: ./run-tests.sh doc_testing

