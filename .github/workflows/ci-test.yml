name: Maven test

on:
  push:
    branches: [ actions-test ]

jobs:
  integration-tests:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: irida_integration_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false  #Setting so that if one of the test suites fail, the other will continue
      matrix:
        #The list of test suites to run
        suite: [ 'service_testing', 'rest_testing', 'ui_testing', 'doc_testing', 'galaxy_testing', 'galaxy_pipeline_testing' ]

    steps:
      - uses: actions/checkout@v2 #Checkout the project from git
      - name: Cache Maven dependencies #Pull the cache for Maven.  This caches all dependencies assuming the pom file is the same
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Cache Node modules #Pull the cache for node_modules.  This caches all dependencies assuming the yarn.lock file stays the same
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      #- name: Start database # Starts mysql on the server
      #  run: sudo /etc/init.d/mysql start
      #- name: 'Database setup' # Creates the database and user for the tests
      #  run: mysql -uroot -proot -e "CREATE USER 'test'@'localhost' IDENTIFIED BY 'test'; GRANT ALL ON irida_integration_test.* to 'test'@'localhost';"
      - name: Set up JDK 11 # Installs java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install libraries # Install our non-maven backed dependencies, and docs requirements
        run: pushd lib; ./install-libs.sh; popd; sudo gem install jekyll; sudo gem install pygments.rb
      - name: Verify MySQL connection
          env:
            PORT: 3306
          run: |
            while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
              sleep 1
            done
      - name: Run tests with Maven # Run the test suite
        run: ./run-tests.sh ${{ matrix.suite }}

